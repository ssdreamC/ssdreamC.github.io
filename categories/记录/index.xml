<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>记录 on ssdreamC·凉月</title>
    <link>https://ssdreamc.github.io/categories/%E8%AE%B0%E5%BD%95/</link>
    <description>Recent content in 记录 on ssdreamC·凉月</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 19 Aug 2022 11:14:12 +0800</lastBuildDate><atom:link href="https://ssdreamc.github.io/categories/%E8%AE%B0%E5%BD%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>第一篇测试稿</title>
      <link>https://ssdreamc.github.io/posts/my-first-post/</link>
      <pubDate>Fri, 19 Aug 2022 11:14:12 +0800</pubDate>
      
      <guid>https://ssdreamc.github.io/posts/my-first-post/</guid>
      <description>这是第一篇测试文章，hogo支持markdown就很开心；
当我准备差不多了我就搞个 gitee 的 page……
记录链接到标题2022-08-22 10:35:13
先试用hogo-code的主题
git submodule add https://github.com/luizdepra/hugo-coder.git themes/hugo-coder 发现：
设置可以写在主题的config.toml中，也可以写在主目录的config.toml中 图片等资源默认应该放入主目录下的static中 2022-08-22 11:01:27
标签和分类
[taxonomies] tag = &amp;#34;tags&amp;#34; category = &amp;#34;categories&amp;#34; --- title: &amp;#34;第一篇测试稿&amp;#34; date: 2022-08-19T11:14:12+08:00 tags: [&amp;#34;记录&amp;#34;, &amp;#34;hugo&amp;#34;] categories: [&amp;#34;记录&amp;#34;] --- 2022-08-22 18:25:03
hugo 的目录说明：
archetypes，原型或者说模板，hugo new 的时候使用的 assets，资产，默认不创建 config，设置，默认不会创建而是只有一个config.toml Hugo ships with a large number of configuration directives. The config directory is where those directives are stored as JSON, YAML, or TOML files.</description>
    </item>
    
    <item>
      <title>tech notes</title>
      <link>https://ssdreamc.github.io/posts/tech/</link>
      <pubDate>Mon, 13 Sep 2021 03:19:12 +0800</pubDate>
      
      <guid>https://ssdreamc.github.io/posts/tech/</guid>
      <description>about some tech marked链接到标题1. spring boot链接到标题1.1. PostMapping 属性链接到标题name value 请求路由地址 path 指定路由地址 params 指定request中必须包含某些参数值 headers 指定request中必须包含某些指定的header值 consumes 请求提交内容类型，MediaType方式，如 application/json、application/x-www-urlencode、multipart/form-data等 produces 请求返回的数据类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回，如application/json demo:
@PostMapping(value = &amp;#34;/admin&amp;#34;, consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE) public ResponseEntity&amp;lt;Object&amp;gt; postPCWithJson(@RequestBody Object body,HttpServletRequest request, HttpServletResponse response, HttpMethod httpMethod) throws URISyntaxException { // TODO return new ResponseEntity(&amp;#34;&amp;#34;, HttpStatus.OK); } demoNieyan:
@ApiOperation(value = &amp;#34;获取文章记录&amp;#34;, httpMethod = &amp;#34;POST&amp;#34;) @PreAuth(&amp;#34;permitAll()&amp;#34;) @PostMapping(value = &amp;#34;/query&amp;#34;, produces = &amp;#34;application/json;charset=UTF-8&amp;#34;) public R&amp;lt;PageInfoView&amp;lt;InnerHits&amp;lt;ArticleListVO&amp;gt;&amp;gt;&amp;gt; queryNews(@RequestBody QueryArticleParam queryArticleParam, Query query) { PageInfoView&amp;lt;InnerHits&amp;lt;ArticleListVO&amp;gt;&amp;gt; pageInfoView = openNewsService.</description>
    </item>
    
  </channel>
</rss>
